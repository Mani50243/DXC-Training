package Task2;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Employe {
	@Id
private int empid;
private String empname;
private String city;
private int age;
private String dept;
public int getEmpid() {
	return empid;
}
public void setEmpid(int empid) {
	this.empid = empid;
}
public String getEmpname() {
	return empname;
}
public void setEmpname(String empname) {
	this.empname = empname;
}
public String getCity() {
	return city;
}
public void setCity(String city) {
	this.city = city;
}
public int getAge() {
	return age;
}
public void setAge(int age) {
	this.age = age;
}
public String getDept() {
	return dept;
}
public void setDept(String dept) {
	this.dept = dept;
}
public Employe(int empid, String empname, String city, int age, String dept) {
	super();
	this.empid = empid;
	this.empname = empname;
	this.city = city;
	this.age = age;
	this.dept = dept;
}
@Override
public String toString() {
	return "Employe [empid=" + empid + ", empname=" + empname + ", city=" + city + ", age=" + age + ", dept=" + dept
			+ "]";
}

public Employe() {
	
}

}
********************************************************************************************************************
package Task2;

import java.util.ArrayList;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.LogicalExpression;
import org.hibernate.criterion.Restrictions;

import com.myapp.model.Book;

public class EmployeDao {
	SessionFactory factory=null;
	public ArrayList<Employe>Emplc(){
		try {
			factory=new Configuration().configure().buildSessionFactory();
			Session session= factory.openSession();
			Transaction tx=session.beginTransaction();
			Criteria ct=session.createCriteria(Employe.class);
			ct.add(Restrictions.ilike("city","b%"));
			ct.add(Restrictions.gt("age",40));
			
			ArrayList<Employe>employe=(ArrayList<Employe>)ct.list();
			return employe;
		}
		catch(Exception e){
			e.printStackTrace();
		}
		finally {
			factory.close();
			}
		return null;
	}
	
	
	public ArrayList<Employe>Empagedept(){
		try {
			factory=new Configuration().configure().buildSessionFactory();
			Session session= factory.openSession();
			Transaction tx=session.beginTransaction();
			Criteria ct=session.createCriteria(Employe.class);
			Criterion ex=Restrictions.ilike("dept","sales");
			Criterion ep=Restrictions.gt("age",40);
			LogicalExpression exp=Restrictions.or(ex,ep);
			ArrayList<Employe>employe=(ArrayList<Employe>)ct.add(exp).list();
			return employe;
		}
		catch(Exception e){
			e.printStackTrace();
		}
		finally {
			factory.close();
			}
		return null;
	}
	
	public ArrayList<Employe>EmpsaleHr(){
		try {
			factory=new Configuration().configure().buildSessionFactory();
			Session session= factory.openSession();
			Transaction tx=session.beginTransaction();
			Criteria ct=session.createCriteria(Employe.class);
			Criterion ex=Restrictions.ilike("dept","sales");
			Criterion ep=Restrictions.ilike("dept","hr");
			LogicalExpression exp=Restrictions.or(ex,ep);
			ArrayList<Employe>employe=(ArrayList<Employe>)ct.add(exp).list();
			return employe;
		}
		catch(Exception e){
			e.printStackTrace();
		}
		finally {
			factory.close();
			}
		return null;
	}
	

}
*******************************************************************************************************************************


package Task2;

import java.util.ArrayList;

public class Empservice {
	public static void main(String[] args) {
		EmployeDao dao=new EmployeDao();
		ArrayList<Employe>emp=(ArrayList<Employe>)dao.EmpsaleHr();
		for(Employe e:emp) {
			System.out.println(e);
		}
	}

}
